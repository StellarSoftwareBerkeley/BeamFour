

====COMPILING.TXT====

On Linux, run the Makefile:
    make
or otherwise execute the following individual steps:

1.  Get your compiler version:    
        javac -version
    and enter the version on line 19 of B4constants.java where it will become available
    to the Help::About dialog. 

2.  Compile all .java files using the -Xlint option and check for errors and warnings:
        javac -Xlint *.java

3.  Group all the resulting .class files into an executable .jar file:
        jar cmf manifest.txt outputname.jar *.class
    where manifest.txt specifies the entrypoint class "B4". See Oracle docs. 

4.  On most Linux systems, one must mark the .jar as executable, not merely an archive.
    To do this, right click the .jar icon, choose Properties/General "Open with JDK" 
    and if available "Set as Default." Then on Permissions tab, click "Make the file executable."  


Build 166 has 37 files, listed below.
  
  to list source files use..    ls *.java | xargs -n1 basename


Adjustment.java
  Data structure for adjustable optical parameters.
  Classes: Adjustment.

AutoAdj.java
  When instantiated, sets up L-M nonlinear least squares for optics & rays.
  Classes:  AutoAdj, AdjHost, LMadj.

AutoRay.java
  Adjusts one or two ray start parameters for each ray, to intercept downstream goals.
  Classes: AutoRay, RayHost, LMray.

B4.java
  Supplies main() as entrypoint for BEAM FOUR.
  Classes:  B4

B4constants.java
  Static definitions implemented throughout BEAM FOUR.
  Interface:  B4constants

BJIF.java
  Extends  JInternalFrame to provide a caret blinker.
  Abstract class: BJIF.

CAD.java
  Static output methods called by DMF�s doCAD().
  Classes:  CAD.

Clipper.java
  Performs double precision clipping of line segments.
  Classes:  Clipper.

Comparo.java
  Evaluates difference vectors and sum-of-squares.
  Classes:  Comparo.

DemoPanel.java
  Extends the graphic GPanel to show a tiny demo graphic
  Classes:  DemoPanel.

DMF.java
  Desktop and menu manager JFrame, hence central switchyard.
  Classes:  DMF, LimitingDesktopMgr, DMFDropTargetListener.

EJIF.java
  Extends BJIF to provide JInternalFrame environment for an editor.
  Classes:  EJIF, PrintText.

EPanel.java
  Extends JPanel to provide editing functions.
  Classes:  EPanel.

FileFilterGIF.java
FileFilterJPG.java
FileFilterPNG.java
  These extend FileFilter to select for three graphic formats.

GJIF.java
  Extends BJIF to provide a JInternalFrame environment for graphics.
  Classes:  GJIF.
 
GPanel.java
  Abstract class extends JPanel, for all graphics output methods.
  Classes:  GPanel.

H1DPanel.java
  Extends GPanel, provides 1D histogram capability.
  Classes:  H1DPanel.

H2DPanel.java
  Extends GPanel, provides 2D histogram capability.
  Classes:  H2DPanel.

InOut.java
  Performs ray trace and fills in .RAY output fields.
  Classes:  InOut.

LayoutPanel.java
  Extends GPanel, performs ray trace, makes layout graphics.
  Classes:  LayoutPanel.

MapPanel.java
  Extends GPanel, draws two parameter map of blur.
  Classes:  GPanel.

MEJIF.java
  Extends EJIF, provides an editor specific for media tables.
  Classes:  MEJIF.

MPlotPanel.java
  Extends GPanel, provides stepped parameter multiple spot diagrams.
  Classes:  MPlotPanel.

MTFPanel.java
  Extends GPanel, plots MTF given that 1D histo exists.
  Classes:  MTFPanel.

OEJIF.java
  Extends EJIF, provides an editor specific for optics tables.
  Classes:  OEJIF.

Options.java
  Extends JMenu, provides dialogs for all user options.
  Classes:  Options, and many tiny dialog classes.

Plot2Panel.java
  Extends GPanel; creates 2D plots of .RAY data.
  Classes:  Plot2Panel.

Plot3Panel.java
  Extends GPanel; creates 3D plots of .RAY data.
  Classes:  Plot3Panel.

Random.java
  Feeds random ray triggers to RT13�s ray number zero.
  Classes:  Random.

Registry.java
  Manages a string list of current user option selections.
  Classes:  Registry.

REJIF.java
  Extends EJIF, provides an editor for .RAY tables.
  Classes: REJIF.

RT13.java
  Performs all ray tracing.
  Classes:  RT13.

U.java
  Provides static math and string utilities.
  Classes:  U.

XYZO.java
  Defines the XYZO object, basis for all 3D graphic ArrayLists.
  Classes:  XYZO.

Z.java
  Static math methods for conic, cylinder, etc intercepts.
  Classes:  XYZO.
